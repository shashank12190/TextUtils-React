{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","backgroundColor","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capatialize","msg","defaultProps","aboutText","App","setmode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.573ebe6b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li> */}\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/\">Contect Us</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\r\n\r\n                    </ul>\r\n                    <div className=\"form-check form-switch\">\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className={`form-check-label text-${props.mode === \"light\" ? \"dark\" : \"light\"}`} htmlFor=\"flexSwitchCheckDefault\">Enable Darkmode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n    title: 'my title',\r\n    aboutText: 'About'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"enter your text\");\r\n    // text = \"new text\"   //wrong method\r\n    // setText(\"new Text\")   //correct method\r\n    const handleUpper = () => {\r\n        // console.log(\"uper case was click\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to upper case\", \"success\")\r\n    }\r\n    const handleLower = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lower case\", \"success\")\r\n    }\r\n    const handleClear = () => {\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared\", \"success\")\r\n    }\r\n    const handleCopy = () => {\r\n        let text = document.getElementById(\"myBox\")\r\n        text.select();\r\n        text.setSelectionRange(0, 99999)\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text copied to Clipboard\", \"success\")\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/)\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra Spaces Cleared\", \"success\")\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log('onChange');\r\n        setText(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ color: props.mode === \"dark\" ? \"white\" : \"#1f1139\" }}>\r\n                <div className=\"my-3 container\" style={{ backgroundColor: props.mode === \"dark\" ? \"#1f1139\" : \"white\" }}>\r\n                    <h1>{props.heading}</h1>\r\n                    <textarea className=\"form-control\" style={{ backgroundColor: props.mode === \"dark\" ? \"#1f1139\" : \"white\", color: props.mode === \"dark\" ? \"white\" : \"#1f1139\" }} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"5\"></textarea>\r\n                    <button className=\"btn btn-primary my-3\" onClick={handleUpper}>Convert to uppercase</button>\r\n                    <button className=\"btn btn-primary my-3 mx-1\" onClick={handleLower}>Convert to lowercase</button>\r\n                    <button className=\"btn btn-primary my-3 mx-1\" onClick={handleCopy}>CopyText</button>\r\n                    <button className=\"btn btn-primary my-3 mx-1\" onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n                    <button className=\"btn btn-danger my-3 mx-1\" onClick={handleClear}>Delete</button>\r\n                </div>\r\n                <div className=\"container my-3\">\r\n                    <h1>You Text Summary :-</h1>\r\n                    <p> words-{text.split(\" \").length} and Characters-{text.length}</p>\r\n                    <p>{0.008 * text.split(\" \").length} - minuts to read </p>\r\n                    <h2>Preview</h2>\r\n                    <p>{text.length > 0 ? text : \"Please add something\"}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capatialize = (word) => {\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capatialize(props.alert.type)}</strong>{props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  //weather dark mode is enabled or not \n  const [mode, setmode] = useState(\"light\")//weather dark mode is enabled or not \n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\")\n      document.body.style.backgroundColor = \"#1f1139\"\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    } else {\n      setmode(\"light\")\n      document.body.style.backgroundColor = \"white\"\n      showAlert(\"Light mode has been enabled\", \"success\")\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n\n      <Navbar title=\"textUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch>  */}\n        {/* <Route path=\"/about\">\n              <About />\n            </Route>  */}\n        {/* <Route path=\"/\"> */}\n        <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n        {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n\n\n\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}